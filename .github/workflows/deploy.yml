name: Deploy Backend to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build Docker image and push to ECR
      - name: Build, tag, and push Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}  # short commit hash
          IMAGE_URI=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
          docker build -t $IMAGE_URI quequeue-backend
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      # Step 5: Generate Dockerrun.aws.json dynamically
      - name: Generate Dockerrun.aws.json
        run: |
          cat > Dockerrun.aws.json <<EOL
          {
            "AWSEBDockerrunVersion": 1,
            "Image": {
              "Name": "${IMAGE_URI}",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": "8000"
              }
            ]
          }
          EOL

      # Step 6: Install EB CLI
      - name: Install AWS Elastic Beanstalk CLI
        run: pip install awsebcli

      # Step 7: Deploy to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        run: |
          zip deploy.zip Dockerrun.aws.json
          eb init ${{ secrets.EB_APP_NAME }} \
            --region ${{ secrets.AWS_REGION }} \
            --platform "Docker" \
            --verbose \
            --no-verify-ssl \
            --quiet
          eb use ${{ secrets.EB_ENV_NAME }}
          eb deploy --staged --debug --verbose
