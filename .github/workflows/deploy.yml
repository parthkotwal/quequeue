name: Deploy Backend to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build Docker image and push to ECR
      - name: Build, tag, and push Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}  # short commit hash
          IMAGE_URI=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
          docker build -t $IMAGE_URI quequeue-backend
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      # Step 5: Generate Dockerrun.aws.json dynamically using jq (more robust)
      - name: Generate Dockerrun.aws.json
        run: |
          jq -n \
            --arg image_uri "$IMAGE_URI" \
            '{
              "AWSEBDockerrunVersion": 1,
              "Image": {
                "Name": $image_uri,
                "Update": "true"
              },
              "Ports": [
                {
                  "ContainerPort": 8000
                }
              ]
            }' > Dockerrun.aws.json
          # Verify the generated file
          cat Dockerrun.aws.json

      # Step 6: Debug Dockerrun output
      - name: Debug Dockerrun
        run: cat Dockerrun.aws.json

      # Step 7: Package app
      - name: Package Dockerrun.aws.json
        run: |
          rm -f deploy.zip
          zip deploy.zip Dockerrun.aws.json

      # Step 8: Deploy using AWS CLI
      - name: Deploy to Elastic Beanstalk
        run: |
          VERSION_LABEL=build-${GITHUB_SHA::8}
          aws s3 cp deploy.zip s3://${{ secrets.EB_BUCKET }}/$VERSION_LABEL.zip
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --version-label $VERSION_LABEL \
            --source-bundle S3Bucket=${{ secrets.EB_BUCKET }},S3Key=$VERSION_LABEL.zip
          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --version-label $VERSION_LABEL